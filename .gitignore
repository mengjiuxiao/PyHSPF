*.pyc
*.pyo
*.o
*.so
*.dll
*~
*#

# 这些是在版本控制（如Git）或其他文件管理上下文中的忽略模式（通常使用.gitignore文件来定义）。当文件名匹配这些模式时，它们将被忽略，不会被添加到版本控制中。以下是这些模式的解释：
# 
# 匹配所有以 .pyc 结尾的文件。
# .pyc 文件是 Python 的编译文件，包含字节码，它们通常由 Python 解释器在首次运行时生成。
# 匹配所有以 .pyo 结尾的文件。
# .pyo 文件也是 Python 的编译文件，但它们是优化后的版本，通常比 .pyc 文件更小和更快。
# 匹配所有以 .o 结尾的文件。
# .o 文件是编译后的目标文件，通常由 C 或 C++ 编译器生成。
# 匹配所有以 .so 结尾的文件。
# .so 文件是共享对象文件，它们通常用于 Unix 和 Linux 系统上的共享库。
# 匹配所有以 .dll 结尾的文件。
# .dll 文件是动态链接库文件，它们在 Windows 系统上用于共享代码和资源。
# 匹配所有以 ~ 结尾的文件。
# 在某些文本编辑器（如 Emacs）中，这种文件名模式通常用于表示临时文件或备份文件。
# 匹配所有以 # 结尾的文件。
# 这是另一种用于表示临时文件或备份文件的文件名模式。
# 这些忽略模式有助于确保不需要或不应该被版本控制的文件不会被意外地添加到代码库中。
